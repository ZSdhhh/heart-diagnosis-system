{"ast":null,"code":"import { ref, reactive, onMounted, toRefs, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport { getAllPatients } from '@/api/patient';\nimport { getStatistics } from '@/api/diagnosis';\nimport { getAllAlgorithms } from '@/api/algorithm';\nexport default {\n  name: 'Dashboard',\n  setup() {\n    const router = useRouter();\n    const store = useStore();\n    const state = reactive({\n      patientCount: 0,\n      diagnosisCount: 0,\n      algorithmCount: 0,\n      loading: false\n    });\n\n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true;\n      try {\n        // 获取患者数量\n        const patientRes = await getAllPatients();\n        state.patientCount = patientRes.data ? patientRes.data.length : 0;\n\n        // 获取诊断统计\n        const statRes = await getStatistics();\n        state.diagnosisCount = statRes.data && statRes.data.diagnosisCount ? statRes.data.diagnosisCount : 0;\n\n        // 获取算法统计\n        const algoRes = await getAllAlgorithms();\n        const algorithms = algoRes.data || [];\n        store.dispatch('fetchAlgorithms', algorithms);\n        state.algorithmCount = algorithms.length;\n      } catch (error) {\n        console.error('获取统计数据失败', error);\n      } finally {\n        state.loading = false;\n      }\n    };\n\n    // 页面跳转\n    const goToPatients = () => {\n      router.push('/home/patients');\n    };\n    const goToDiagnosis = () => {\n      router.push('/home/diagnosis');\n    };\n    const goToStatistics = () => {\n      router.push('/home/statistics');\n    };\n    onMounted(() => {\n      getStatisticsData();\n    });\n    return {\n      ...toRefs(state),\n      goToPatients,\n      goToDiagnosis,\n      goToStatistics\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","toRefs","computed","useRouter","useStore","getAllPatients","getStatistics","getAllAlgorithms","name","setup","router","store","state","patientCount","diagnosisCount","algorithmCount","loading","getStatisticsData","patientRes","data","length","statRes","algoRes","algorithms","dispatch","error","console","goToPatients","push","goToDiagnosis","goToStatistics"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Dashboard.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"8\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>患者统计</span>\n            </div>\n          </template>\n          <div class=\"card-body\">\n            <div class=\"stat-value\">{{ patientCount }}</div>\n            <div class=\"stat-label\">患者总数</div>\n          </div>\n          <div class=\"card-footer\">\n            <el-button type=\"primary\" @click=\"goToPatients\">管理患者</el-button>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>诊断统计</span>\n            </div>\n          </template>\n          <div class=\"card-body\">\n            <div class=\"stat-value\">{{ diagnosisCount }}</div>\n            <div class=\"stat-label\">诊断总数</div>\n          </div>\n          <div class=\"card-footer\">\n            <el-button type=\"primary\" @click=\"goToDiagnosis\">开始诊断</el-button>\n          </div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"box-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>算法统计</span>\n            </div>\n          </template>\n          <div class=\"card-body\">\n            <div class=\"stat-value\">{{ algorithmCount }}</div>\n            <div class=\"stat-label\">可用算法数</div>\n          </div>\n          <div class=\"card-footer\">\n            <el-button type=\"primary\" @click=\"goToStatistics\">查看统计</el-button>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <div class=\"welcome-section\">\n      <h2>欢迎使用心脏病辅助诊断系统</h2>\n      <p>本系统提供心脏病风险评估的辅助诊断功能，帮助医生快速评估患者心脏病风险。</p>\n      \n      <div class=\"feature-list\">\n        <div class=\"feature-item\">\n          <el-icon><User /></el-icon>\n          <div class=\"feature-info\">\n            <h3>患者管理</h3>\n            <p>添加、编辑和管理患者信息</p>\n          </div>\n        </div>\n        <div class=\"feature-item\">\n          <el-icon><Stethoscope /></el-icon>\n          <div class=\"feature-info\">\n            <h3>风险诊断</h3>\n            <p>基于患者数据进行心脏病风险评估</p>\n          </div>\n        </div>\n        <div class=\"feature-item\">\n          <el-icon><DataLine /></el-icon>\n          <div class=\"feature-info\">\n            <h3>数据统计</h3>\n            <p>查看诊断统计和数据分析</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs, computed } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport { getAllPatients } from '@/api/patient'\nimport { getStatistics } from '@/api/diagnosis'\nimport { getAllAlgorithms } from '@/api/algorithm'\n\nexport default {\n  name: 'Dashboard',\n  setup() {\n    const router = useRouter()\n    const store = useStore()\n    \n    const state = reactive({\n      patientCount: 0,\n      diagnosisCount: 0,\n      algorithmCount: 0,\n      loading: false\n    })\n    \n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true\n      try {\n        // 获取患者数量\n        const patientRes = await getAllPatients()\n        state.patientCount = patientRes.data ? patientRes.data.length : 0\n        \n        // 获取诊断统计\n        const statRes = await getStatistics()\n        state.diagnosisCount = statRes.data && statRes.data.diagnosisCount ? statRes.data.diagnosisCount : 0\n        \n        // 获取算法统计\n        const algoRes = await getAllAlgorithms()\n        const algorithms = algoRes.data || []\n        store.dispatch('fetchAlgorithms', algorithms)\n        state.algorithmCount = algorithms.length\n      } catch (error) {\n        console.error('获取统计数据失败', error)\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 页面跳转\n    const goToPatients = () => {\n      router.push('/home/patients')\n    }\n    \n    const goToDiagnosis = () => {\n      router.push('/home/diagnosis')\n    }\n    \n    const goToStatistics = () => {\n      router.push('/home/statistics')\n    }\n    \n    onMounted(() => {\n      getStatisticsData()\n    })\n    \n    return {\n      ...toRefs(state),\n      goToPatients,\n      goToDiagnosis,\n      goToStatistics\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-container {\n  min-height: 100%;\n}\n\n.box-card {\n  margin-bottom: 20px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.card-body {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 0;\n}\n\n.card-footer {\n  text-align: center;\n  margin-top: auto;\n  margin-bottom: 10px;\n}\n\n.stat-value {\n  font-size: 36px;\n  font-weight: bold;\n  color: #409EFF;\n}\n\n.stat-label {\n  margin-top: 10px;\n  color: #606266;\n}\n\n.welcome-section {\n  background-color: #fff;\n  padding: 30px;\n  border-radius: 4px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  margin-top: 20px;\n}\n\n.welcome-section h2 {\n  margin-top: 0;\n  color: #303133;\n}\n\n.welcome-section p {\n  color: #606266;\n  margin-bottom: 30px;\n}\n\n.feature-list {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n}\n\n.feature-item {\n  display: flex;\n  align-items: flex-start;\n  width: 30%;\n}\n\n.feature-item .el-icon {\n  font-size: 24px;\n  color: #409EFF;\n  margin-right: 10px;\n  margin-top: 3px;\n}\n\n.feature-info h3 {\n  margin: 0 0 10px 0;\n  color: #303133;\n}\n\n.feature-info p {\n  margin: 0;\n  color: #606266;\n}\n</style> "],"mappings":"AAqFA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAO,QAAS,KAAI;AAC/D,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,cAAa,QAAS,eAAc;AAC7C,SAASC,aAAY,QAAS,iBAAgB;AAC9C,SAASC,gBAAe,QAAS,iBAAgB;AAEjD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIP,SAAS,CAAC;IACzB,MAAMQ,KAAI,GAAIP,QAAQ,CAAC;IAEvB,MAAMQ,KAAI,GAAIb,QAAQ,CAAC;MACrBc,YAAY,EAAE,CAAC;MACfC,cAAc,EAAE,CAAC;MACjBC,cAAc,EAAE,CAAC;MACjBC,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMC,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpCL,KAAK,CAACI,OAAM,GAAI,IAAG;MACnB,IAAI;QACF;QACA,MAAME,UAAS,GAAI,MAAMb,cAAc,CAAC;QACxCO,KAAK,CAACC,YAAW,GAAIK,UAAU,CAACC,IAAG,GAAID,UAAU,CAACC,IAAI,CAACC,MAAK,GAAI;;QAEhE;QACA,MAAMC,OAAM,GAAI,MAAMf,aAAa,CAAC;QACpCM,KAAK,CAACE,cAAa,GAAIO,OAAO,CAACF,IAAG,IAAKE,OAAO,CAACF,IAAI,CAACL,cAAa,GAAIO,OAAO,CAACF,IAAI,CAACL,cAAa,GAAI;;QAEnG;QACA,MAAMQ,OAAM,GAAI,MAAMf,gBAAgB,CAAC;QACvC,MAAMgB,UAAS,GAAID,OAAO,CAACH,IAAG,IAAK,EAAC;QACpCR,KAAK,CAACa,QAAQ,CAAC,iBAAiB,EAAED,UAAU;QAC5CX,KAAK,CAACG,cAAa,GAAIQ,UAAU,CAACH,MAAK;MACzC,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;MACjC,UAAU;QACRb,KAAK,CAACI,OAAM,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMW,YAAW,GAAIA,CAAA,KAAM;MACzBjB,MAAM,CAACkB,IAAI,CAAC,gBAAgB;IAC9B;IAEA,MAAMC,aAAY,GAAIA,CAAA,KAAM;MAC1BnB,MAAM,CAACkB,IAAI,CAAC,iBAAiB;IAC/B;IAEA,MAAME,cAAa,GAAIA,CAAA,KAAM;MAC3BpB,MAAM,CAACkB,IAAI,CAAC,kBAAkB;IAChC;IAEA5B,SAAS,CAAC,MAAM;MACdiB,iBAAiB,CAAC;IACpB,CAAC;IAED,OAAO;MACL,GAAGhB,MAAM,CAACW,KAAK,CAAC;MAChBe,YAAY;MACZE,aAAa;MACbC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}