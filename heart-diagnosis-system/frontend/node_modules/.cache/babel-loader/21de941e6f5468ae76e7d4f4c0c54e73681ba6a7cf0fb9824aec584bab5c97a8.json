{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"statistics-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"padding\": \"20px\"\n  }\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"chart-container\"\n};\nconst _hoisted_6 = {\n  ref: \"algorithmChartRef\",\n  class: \"chart\"\n};\nconst _hoisted_7 = {\n  class: \"chart-container\"\n};\nconst _hoisted_8 = {\n  ref: \"riskChartRef\",\n  class: \"chart\"\n};\nconst _hoisted_9 = {\n  class: \"summary-container\"\n};\nconst _hoisted_10 = {\n  class: \"summary-content\"\n};\nconst _hoisted_11 = {\n  class: \"summary-item\"\n};\nconst _hoisted_12 = {\n  class: \"item-value\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"no-data\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_skeleton_item = _resolveComponent(\"el-skeleton-item\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"span\", null, \"数据统计\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.getStatisticsData\n    }, {\n      default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"刷新数据\")])),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_skeleton, {\n      loading: _ctx.loading,\n      animated: \"\"\n    }, {\n      template: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_skeleton_item, {\n        variant: \"p\",\n        style: {\n          \"width\": \"100%\",\n          \"height\": \"300px\"\n        }\n      }), _createVNode(_component_el_skeleton_item, {\n        variant: \"p\",\n        style: {\n          \"width\": \"100%\",\n          \"height\": \"300px\",\n          \"margin-top\": \"20px\"\n        }\n      })])]),\n      default: _withCtx(() => [_ctx.statistics ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_el_row, {\n        gutter: 20\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"诊断算法分布\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */)])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_col, {\n          span: 12\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_7, [_cache[3] || (_cache[3] = _createElementVNode(\"h3\", null, \"风险等级分布\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_8, null, 512 /* NEED_PATCH */)])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createElementVNode(\"div\", _hoisted_9, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"诊断数据摘要\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", _hoisted_11, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n        class: \"item-label\"\n      }, \"诊断总数\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, _toDisplayString(_ctx.statistics.diagnosisCount || 0), 1 /* TEXT */)])])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \"暂无统计数据\"))]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"loading\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","style","key","ref","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","$setup","getStatisticsData","default","_cache","_createTextVNode","_","_component_el_skeleton","loading","_ctx","animated","template","_hoisted_3","_component_el_skeleton_item","variant","statistics","_hoisted_4","_component_el_row","gutter","_component_el_col","span","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","diagnosisCount","_hoisted_13"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Statistics.vue"],"sourcesContent":["<template>\n  <div class=\"statistics-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>数据统计</span>\n          <el-button type=\"primary\" @click=\"getStatisticsData\">刷新数据</el-button>\n        </div>\n      </template>\n      \n      <el-skeleton :loading=\"loading\" animated>\n        <template #template>\n          <div style=\"padding: 20px\">\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px\" />\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px; margin-top: 20px\" />\n          </div>\n        </template>\n        \n        <template #default>\n          <div v-if=\"statistics\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>诊断算法分布</h3>\n                  <div ref=\"algorithmChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>风险等级分布</h3>\n                  <div ref=\"riskChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n            </el-row>\n            \n            <div class=\"summary-container\">\n              <h3>诊断数据摘要</h3>\n              <div class=\"summary-content\">\n                <div class=\"summary-item\">\n                  <div class=\"item-label\">诊断总数</div>\n                  <div class=\"item-value\">{{ statistics.diagnosisCount || 0 }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"no-data\">暂无统计数据</div>\n        </template>\n      </el-skeleton>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs, onBeforeUnmount } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getStatistics } from '@/api/diagnosis'\nimport { getAllPatients } from '@/api/patient'\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Statistics',\n  setup() {\n    const algorithmChartRef = ref(null)\n    const riskChartRef = ref(null)\n    let algorithmChart = null\n    let riskChart = null\n    \n    const state = reactive({\n      loading: false,\n      statistics: null,\n      patients: []\n    })\n    \n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true\n      try {\n        const res = await getStatistics()\n        state.statistics = res.data\n        \n        // 获取患者数据\n        const patientRes = await getAllPatients()\n        state.patients = patientRes.data\n        \n        // 渲染图表\n        renderCharts()\n      } catch (error) {\n        ElMessage.error('获取统计数据失败')\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 渲染图表\n    const renderCharts = () => {\n      if (!state.statistics) return\n      \n      // 算法分布图表\n      renderAlgorithmChart()\n      \n      // 风险等级分布图表\n      renderRiskLevelChart()\n    }\n    \n    // 渲染算法分布图表\n    const renderAlgorithmChart = () => {\n      if (!algorithmChartRef.value) return\n      \n      if (!algorithmChart) {\n        algorithmChart = echarts.init(algorithmChartRef.value)\n      }\n      \n      const algorithmData = state.statistics.algorithmDistribution || []\n      const seriesData = algorithmData.map(item => ({\n        name: item.algorithm,\n        value: item.count\n      }))\n      \n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: seriesData.map(item => item.name)\n        },\n        series: [\n          {\n            name: '算法分布',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: seriesData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      }\n      \n      algorithmChart.setOption(option)\n    }\n    \n    // 渲染风险等级分布图表\n    const renderRiskLevelChart = () => {\n      if (!riskChartRef.value) return\n      \n      if (!riskChart) {\n        riskChart = echarts.init(riskChartRef.value)\n      }\n      \n      // 模拟数据\n      const riskData = [\n        { name: '高风险', value: 0 },\n        { name: '中风险', value: 0 },\n        { name: '低风险', value: 0 }\n      ]\n      \n      // 统计风险分布\n      if (state.statistics.diagnosisList) {\n        state.statistics.diagnosisList.forEach(item => {\n          const risk = item.result\n          if (risk > 0.7) {\n            riskData[0].value++\n          } else if (risk > 0.3) {\n            riskData[1].value++\n          } else {\n            riskData[2].value++\n          }\n        })\n      }\n      \n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: riskData.map(item => item.name)\n        },\n        series: [\n          {\n            name: '风险等级',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: riskData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n            itemStyle: {\n              color: function(params) {\n                const colorList = ['#F56C6C', '#E6A23C', '#67C23A']\n                return colorList[params.dataIndex]\n              }\n            }\n          }\n        ]\n      }\n      \n      riskChart.setOption(option)\n    }\n    \n    // 监听窗口大小变化\n    const handleResize = () => {\n      if (algorithmChart) {\n        algorithmChart.resize()\n      }\n      if (riskChart) {\n        riskChart.resize()\n      }\n    }\n    \n    onMounted(() => {\n      getStatisticsData()\n      window.addEventListener('resize', handleResize)\n    })\n    \n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', handleResize)\n      if (algorithmChart) {\n        algorithmChart.dispose()\n        algorithmChart = null\n      }\n      if (riskChart) {\n        riskChart.dispose()\n        riskChart = null\n      }\n    })\n    \n    return {\n      algorithmChartRef,\n      riskChartRef,\n      ...toRefs(state),\n      getStatisticsData\n    }\n  }\n}\n</script>\n\n<style scoped>\n.statistics-container {\n  min-height: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.chart {\n  height: 300px;\n}\n\n.summary-container {\n  margin-top: 20px;\n  border-top: 1px solid #EBEEF5;\n  padding-top: 20px;\n}\n\n.summary-content {\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 20px;\n}\n\n.summary-item {\n  width: 33.33%;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.item-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.item-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-top: 10px;\n}\n\n.no-data {\n  text-align: center;\n  color: #909399;\n  padding: 50px 0;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAsB;;EAGtBA,KAAK,EAAC;AAAa;;EAQjBC,KAAqB,EAArB;IAAA;EAAA;AAAqB;;EAZpCC,GAAA;AAAA;;EAsBqBF,KAAK,EAAC;AAAiB;;EAErBG,GAAG,EAAC,mBAAmB;EAACH,KAAK,EAAC;;;EAIhCA,KAAK,EAAC;AAAiB;;EAErBG,GAAG,EAAC,cAAc;EAACH,KAAK,EAAC;;;EAK/BA,KAAK,EAAC;AAAmB;;EAEvBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAc;;EAElBA,KAAK,EAAC;AAAY;;EAxCzCE,GAAA;EA6CsBF,KAAK,EAAC;;;;;;;;;uBA5C1BI,mBAAA,CAgDM,OAhDNC,UAgDM,GA/CJC,YAAA,CA8CUC,kBAAA;IA9CDP,KAAK,EAAC;EAAU;IACZQ,MAAM,EAAAC,QAAA,CACf,MAGM,CAHNC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAiB,cAAX,MAAI,sBACVJ,YAAA,CAAqEM,oBAAA;MAA1DC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAEC,MAAA,CAAAC;;MAN5CC,OAAA,EAAAR,QAAA,CAM+D,MAAIS,MAAA,QAAAA,MAAA,OANnEC,gBAAA,CAM+D,MAAI,E;MANnEC,CAAA;;IAAAH,OAAA,EAAAR,QAAA,CAUM,MAqCc,CArCdH,YAAA,CAqCce,sBAAA;MArCAC,OAAO,EAAEC,IAAA,CAAAD,OAAO;MAAEE,QAAQ,EAAR;;MACnBC,QAAQ,EAAAhB,QAAA,CACjB,MAGM,CAHNC,mBAAA,CAGM,OAHNgB,UAGM,GAFJpB,YAAA,CAAmEqB,2BAAA;QAAjDC,OAAO,EAAC,GAAG;QAAC3B,KAAkC,EAAlC;UAAA;UAAA;QAAA;UAC9BK,YAAA,CAAqFqB,2BAAA;QAAnEC,OAAO,EAAC,GAAG;QAAC3B,KAAoD,EAApD;UAAA;UAAA;UAAA;QAAA;;MAIvBgB,OAAO,EAAAR,QAAA,CANyB,MA6BpB,CAtBVc,IAAA,CAAAM,UAAU,I,cAArBzB,mBAAA,CAyBM,OA5ChB0B,UAAA,GAoBYxB,YAAA,CAaSyB,iBAAA;QAbAC,MAAM,EAAE;MAAE;QApB/Bf,OAAA,EAAAR,QAAA,CAqBc,MAKS,CALTH,YAAA,CAKS2B,iBAAA;UALAC,IAAI,EAAE;QAAE;UArB/BjB,OAAA,EAAAR,QAAA,CAsBgB,MAGM,CAHNC,mBAAA,CAGM,OAHNyB,UAGM,G,0BAFJzB,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAAiD,OAAjD0B,UAAiD,8B;UAxBnEhB,CAAA;YA2Bcd,YAAA,CAKS2B,iBAAA;UALAC,IAAI,EAAE;QAAE;UA3B/BjB,OAAA,EAAAR,QAAA,CA4BgB,MAGM,CAHNC,mBAAA,CAGM,OAHN2B,UAGM,G,0BAFJ3B,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAA4C,OAA5C4B,UAA4C,8B;UA9B9DlB,CAAA;;QAAAA,CAAA;UAmCYV,mBAAA,CAQM,OARN6B,UAQM,G,0BAPJ7B,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAKM,OALN8B,WAKM,GAJJ9B,mBAAA,CAGM,OAHN+B,WAGM,G,0BAFJ/B,mBAAA,CAAkC;QAA7BV,KAAK,EAAC;MAAY,GAAC,MAAI,sBAC5BU,mBAAA,CAAkE,OAAlEgC,WAAkE,EAAAC,gBAAA,CAAvCpB,IAAA,CAAAM,UAAU,CAACe,cAAc,sB,0BAK5DxC,mBAAA,CAAwC,OAAxCyC,WAAwC,EAAZ,QAAM,G;MA7C5CzB,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}