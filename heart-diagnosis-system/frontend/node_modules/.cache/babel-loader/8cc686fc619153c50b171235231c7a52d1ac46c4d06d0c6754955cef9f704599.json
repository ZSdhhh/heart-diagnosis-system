{"ast":null,"code":"import { ref, reactive, computed, toRefs, watch } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nimport { getAllPatients } from '@/api/patient';\nimport { diagnose, getDiagnosisByPatientId } from '@/api/diagnosis';\nexport default {\n  name: 'Diagnosis',\n  setup() {\n    const store = useStore();\n    const state = reactive({\n      form: {\n        patientId: '',\n        algorithm: ''\n      },\n      patients: [],\n      diagnosisResult: null,\n      loading: false,\n      historyList: []\n    });\n    const algorithms = computed(() => store.state.algorithms);\n\n    // 获取患者列表\n    const getPatients = async () => {\n      try {\n        const res = await getAllPatients();\n        state.patients = res.data;\n      } catch (error) {\n        ElMessage.error('获取患者列表失败');\n      }\n    };\n\n    // 获取历史诊断记录\n    const getDiagnosisHistory = async patientId => {\n      if (!patientId) return;\n      try {\n        const res = await getDiagnosisByPatientId(patientId);\n        state.historyList = res.data;\n      } catch (error) {\n        ElMessage.error('获取诊断历史失败');\n      }\n    };\n\n    // 开始诊断\n    const handleDiagnosis = async () => {\n      if (!state.form.patientId) {\n        ElMessage.warning('请选择患者');\n        return;\n      }\n      state.loading = true;\n      try {\n        const res = await diagnose(state.form);\n        state.diagnosisResult = res.data;\n\n        // 刷新诊断历史\n        getDiagnosisHistory(state.form.patientId);\n      } catch (error) {\n        ElMessage.error('诊断失败');\n      } finally {\n        state.loading = false;\n      }\n    };\n\n    // 获取风险颜色\n    const getResultColor = result => {\n      if (result > 0.7) return '#F56C6C';\n      if (result > 0.3) return '#E6A23C';\n      return '#67C23A';\n    };\n\n    // 获取风险等级\n    const getRiskLevel = result => {\n      if (result > 0.7) return '高风险';\n      if (result > 0.3) return '中风险';\n      return '低风险';\n    };\n\n    // 获取风险描述\n    const getRiskDescription = result => {\n      if (result > 0.7) {\n        return '患者心脏病风险较高，建议进一步详细检查。';\n      } else if (result > 0.3) {\n        return '患者存在一定的心脏病风险，建议注意生活习惯，定期检查。';\n      } else {\n        return '患者心脏病风险较低，建议保持健康的生活方式。';\n      }\n    };\n\n    // 监听患者选择变化\n    watch(() => state.form.patientId, newVal => {\n      getDiagnosisHistory(newVal);\n      state.diagnosisResult = null;\n    });\n\n    // 初始化\n    getPatients();\n    return {\n      ...toRefs(state),\n      algorithms,\n      handleDiagnosis,\n      getResultColor,\n      getRiskLevel,\n      getRiskDescription\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","toRefs","watch","useStore","ElMessage","getAllPatients","diagnose","getDiagnosisByPatientId","name","setup","store","state","form","patientId","algorithm","patients","diagnosisResult","loading","historyList","algorithms","getPatients","res","data","error","getDiagnosisHistory","handleDiagnosis","warning","getResultColor","result","getRiskLevel","getRiskDescription","newVal"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Diagnosis.vue"],"sourcesContent":["<template>\n  <div class=\"diagnosis-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>心脏病诊断</span>\n        </div>\n      </template>\n      \n      <el-form :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"选择患者\">\n          <el-select v-model=\"form.patientId\" placeholder=\"请选择患者\" style=\"width: 100%\">\n            <el-option \n              v-for=\"patient in patients\" \n              :key=\"patient.id\" \n              :label=\"patient.name\" \n              :value=\"patient.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"诊断算法\">\n          <el-select v-model=\"form.algorithm\" placeholder=\"请选择算法\" style=\"width: 100%\">\n            <el-option \n              v-for=\"algorithm in algorithms\" \n              :key=\"algorithm.id\" \n              :label=\"algorithm.name\" \n              :value=\"algorithm.name\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleDiagnosis\" :loading=\"loading\">开始诊断</el-button>\n        </el-form-item>\n      </el-form>\n      \n      <div v-if=\"diagnosisResult !== null\" class=\"result-container\">\n        <h3>诊断结果</h3>\n        <el-progress \n          type=\"circle\" \n          :percentage=\"Math.round(diagnosisResult * 100)\" \n          :color=\"getResultColor(diagnosisResult)\"\n          :status=\"diagnosisResult > 0.7 ? 'exception' : (diagnosisResult > 0.3 ? 'warning' : 'success')\">\n        </el-progress>\n        <div class=\"risk-text\">\n          心脏病风险: <span :style=\"{color: getResultColor(diagnosisResult)}\">{{ getRiskLevel(diagnosisResult) }}</span>\n        </div>\n        <div class=\"risk-description\">\n          {{ getRiskDescription(diagnosisResult) }}\n        </div>\n      </div>\n      \n      <div v-if=\"form.patientId && historyList.length > 0\" class=\"history-container\">\n        <h3>历史诊断记录</h3>\n        <el-table :data=\"historyList\" style=\"width: 100%\">\n          <el-table-column prop=\"createTime\" label=\"诊断时间\" width=\"180\">\n            <template #default=\"scope\">\n              {{ new Date(scope.row.createTime).toLocaleString() }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"algorithm\" label=\"算法\"></el-table-column>\n          <el-table-column label=\"风险值\">\n            <template #default=\"scope\">\n              {{ (scope.row.result * 100).toFixed(2) }}%\n            </template>\n          </el-table-column>\n          <el-table-column label=\"风险等级\">\n            <template #default=\"scope\">\n              <span :style=\"{color: getResultColor(scope.row.result)}\">\n                {{ getRiskLevel(scope.row.result) }}\n              </span>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, toRefs, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { ElMessage } from 'element-plus'\nimport { getAllPatients } from '@/api/patient'\nimport { diagnose, getDiagnosisByPatientId } from '@/api/diagnosis'\n\nexport default {\n  name: 'Diagnosis',\n  setup() {\n    const store = useStore()\n    \n    const state = reactive({\n      form: {\n        patientId: '',\n        algorithm: ''\n      },\n      patients: [],\n      diagnosisResult: null,\n      loading: false,\n      historyList: []\n    })\n    \n    const algorithms = computed(() => store.state.algorithms)\n    \n    // 获取患者列表\n    const getPatients = async () => {\n      try {\n        const res = await getAllPatients()\n        state.patients = res.data\n      } catch (error) {\n        ElMessage.error('获取患者列表失败')\n      }\n    }\n    \n    // 获取历史诊断记录\n    const getDiagnosisHistory = async (patientId) => {\n      if (!patientId) return\n      \n      try {\n        const res = await getDiagnosisByPatientId(patientId)\n        state.historyList = res.data\n      } catch (error) {\n        ElMessage.error('获取诊断历史失败')\n      }\n    }\n    \n    // 开始诊断\n    const handleDiagnosis = async () => {\n      if (!state.form.patientId) {\n        ElMessage.warning('请选择患者')\n        return\n      }\n      \n      state.loading = true\n      try {\n        const res = await diagnose(state.form)\n        state.diagnosisResult = res.data\n        \n        // 刷新诊断历史\n        getDiagnosisHistory(state.form.patientId)\n      } catch (error) {\n        ElMessage.error('诊断失败')\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 获取风险颜色\n    const getResultColor = (result) => {\n      if (result > 0.7) return '#F56C6C'\n      if (result > 0.3) return '#E6A23C'\n      return '#67C23A'\n    }\n    \n    // 获取风险等级\n    const getRiskLevel = (result) => {\n      if (result > 0.7) return '高风险'\n      if (result > 0.3) return '中风险'\n      return '低风险'\n    }\n    \n    // 获取风险描述\n    const getRiskDescription = (result) => {\n      if (result > 0.7) {\n        return '患者心脏病风险较高，建议进一步详细检查。'\n      } else if (result > 0.3) {\n        return '患者存在一定的心脏病风险，建议注意生活习惯，定期检查。'\n      } else {\n        return '患者心脏病风险较低，建议保持健康的生活方式。'\n      }\n    }\n    \n    // 监听患者选择变化\n    watch(() => state.form.patientId, (newVal) => {\n      getDiagnosisHistory(newVal)\n      state.diagnosisResult = null\n    })\n    \n    // 初始化\n    getPatients()\n    \n    return {\n      ...toRefs(state),\n      algorithms,\n      handleDiagnosis,\n      getResultColor,\n      getRiskLevel,\n      getRiskDescription\n    }\n  }\n}\n</script>\n\n<style scoped>\n.diagnosis-container {\n  min-height: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.result-container {\n  margin-top: 20px;\n  text-align: center;\n  padding: 20px;\n  border-top: 1px solid #EBEEF5;\n}\n\n.risk-text {\n  margin-top: 15px;\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.risk-description {\n  margin-top: 10px;\n  color: #606266;\n}\n\n.history-container {\n  margin-top: 30px;\n  border-top: 1px solid #EBEEF5;\n  padding-top: 20px;\n}\n</style> "],"mappings":"AAiFA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,KAAI,QAAS,KAAI;AAC3D,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,cAAa,QAAS,eAAc;AAC7C,SAASC,QAAQ,EAAEC,uBAAsB,QAAS,iBAAgB;AAElE,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC;IAEvB,MAAMQ,KAAI,GAAIZ,QAAQ,CAAC;MACrBa,IAAI,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,SAAS,EAAE;MACb,CAAC;MACDC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE;IACf,CAAC;IAED,MAAMC,UAAS,GAAInB,QAAQ,CAAC,MAAMU,KAAK,CAACC,KAAK,CAACQ,UAAU;;IAExD;IACA,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMhB,cAAc,CAAC;QACjCM,KAAK,CAACI,QAAO,GAAIM,GAAG,CAACC,IAAG;MAC1B,EAAE,OAAOC,KAAK,EAAE;QACdnB,SAAS,CAACmB,KAAK,CAAC,UAAU;MAC5B;IACF;;IAEA;IACA,MAAMC,mBAAkB,GAAI,MAAOX,SAAS,IAAK;MAC/C,IAAI,CAACA,SAAS,EAAE;MAEhB,IAAI;QACF,MAAMQ,GAAE,GAAI,MAAMd,uBAAuB,CAACM,SAAS;QACnDF,KAAK,CAACO,WAAU,GAAIG,GAAG,CAACC,IAAG;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACdnB,SAAS,CAACmB,KAAK,CAAC,UAAU;MAC5B;IACF;;IAEA;IACA,MAAME,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI,CAACd,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE;QACzBT,SAAS,CAACsB,OAAO,CAAC,OAAO;QACzB;MACF;MAEAf,KAAK,CAACM,OAAM,GAAI,IAAG;MACnB,IAAI;QACF,MAAMI,GAAE,GAAI,MAAMf,QAAQ,CAACK,KAAK,CAACC,IAAI;QACrCD,KAAK,CAACK,eAAc,GAAIK,GAAG,CAACC,IAAG;;QAE/B;QACAE,mBAAmB,CAACb,KAAK,CAACC,IAAI,CAACC,SAAS;MAC1C,EAAE,OAAOU,KAAK,EAAE;QACdnB,SAAS,CAACmB,KAAK,CAAC,MAAM;MACxB,UAAU;QACRZ,KAAK,CAACM,OAAM,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMU,cAAa,GAAKC,MAAM,IAAK;MACjC,IAAIA,MAAK,GAAI,GAAG,EAAE,OAAO,SAAQ;MACjC,IAAIA,MAAK,GAAI,GAAG,EAAE,OAAO,SAAQ;MACjC,OAAO,SAAQ;IACjB;;IAEA;IACA,MAAMC,YAAW,GAAKD,MAAM,IAAK;MAC/B,IAAIA,MAAK,GAAI,GAAG,EAAE,OAAO,KAAI;MAC7B,IAAIA,MAAK,GAAI,GAAG,EAAE,OAAO,KAAI;MAC7B,OAAO,KAAI;IACb;;IAEA;IACA,MAAME,kBAAiB,GAAKF,MAAM,IAAK;MACrC,IAAIA,MAAK,GAAI,GAAG,EAAE;QAChB,OAAO,sBAAqB;MAC9B,OAAO,IAAIA,MAAK,GAAI,GAAG,EAAE;QACvB,OAAO,6BAA4B;MACrC,OAAO;QACL,OAAO,wBAAuB;MAChC;IACF;;IAEA;IACA1B,KAAK,CAAC,MAAMS,KAAK,CAACC,IAAI,CAACC,SAAS,EAAGkB,MAAM,IAAK;MAC5CP,mBAAmB,CAACO,MAAM;MAC1BpB,KAAK,CAACK,eAAc,GAAI,IAAG;IAC7B,CAAC;;IAED;IACAI,WAAW,CAAC;IAEZ,OAAO;MACL,GAAGnB,MAAM,CAACU,KAAK,CAAC;MAChBQ,UAAU;MACVM,eAAe;MACfE,cAAc;MACdE,YAAY;MACZC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}