{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"register-container\"\n};\nconst _hoisted_2 = {\n  class: \"register-box\"\n};\nconst _hoisted_3 = {\n  class: \"options\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"title\"\n  }, \"注册账号\", -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    ref: \"registerFormRef\",\n    model: _ctx.registerForm,\n    rules: _ctx.registerRules,\n    \"label-width\": \"0\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.registerForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.registerForm.username = $event),\n        \"prefix-icon\": \"User\",\n        placeholder: \"用户名\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.registerForm.password,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.registerForm.password = $event),\n        \"prefix-icon\": \"Lock\",\n        type: \"password\",\n        placeholder: \"密码\",\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"confirmPassword\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: _ctx.registerForm.confirmPassword,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.registerForm.confirmPassword = $event),\n        \"prefix-icon\": \"Lock\",\n        type: \"password\",\n        placeholder: \"确认密码\",\n        \"show-password\": \"\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        loading: _ctx.loading,\n        class: \"register-button\",\n        onClick: $setup.handleRegister\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"注册\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"onClick\"])]),\n      _: 1 /* STABLE */\n    }), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_router_link, {\n      class: \"login-link\",\n      to: \"/login\"\n    }, {\n      default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"已有账号？去登录\")])),\n      _: 1 /* STABLE */\n    })])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","ref","model","_ctx","registerForm","rules","registerRules","default","_withCtx","_component_el_form_item","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","_","password","type","confirmPassword","_component_el_button","loading","onClick","$setup","handleRegister","_createTextVNode","_hoisted_3","_component_router_link","to"],"sources":["/Users/liuxingliang/Desktop/wendang/20250415/heart-diagnosis-system/frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <div class=\"register-box\">\n      <div class=\"title\">注册账号</div>\n      <el-form ref=\"registerFormRef\" :model=\"registerForm\" :rules=\"registerRules\" label-width=\"0\">\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"registerForm.username\" prefix-icon=\"User\" placeholder=\"用户名\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input v-model=\"registerForm.password\" prefix-icon=\"Lock\" type=\"password\" placeholder=\"密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item prop=\"confirmPassword\">\n          <el-input v-model=\"registerForm.confirmPassword\" prefix-icon=\"Lock\" type=\"password\" placeholder=\"确认密码\" show-password></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" :loading=\"loading\" class=\"register-button\" @click=\"handleRegister\">注册</el-button>\n        </el-form-item>\n        <div class=\"options\">\n          <router-link class=\"login-link\" to=\"/login\">已有账号？去登录</router-link>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reactive, ref, toRefs } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { register } from '@/api/user'\nimport md5 from 'md5'\n\nexport default {\n  name: 'Register',\n  setup() {\n    const router = useRouter()\n    const registerFormRef = ref(null)\n    \n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== state.registerForm.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    \n    const state = reactive({\n      registerForm: {\n        username: '',\n        password: '',\n        confirmPassword: ''\n      },\n      registerRules: {\n        username: [\n          { required: true, trigger: 'blur', message: '请输入用户名' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, trigger: 'blur', message: '请输入密码' },\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, trigger: 'blur', message: '请确认密码' },\n          { validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      },\n      loading: false\n    })\n    \n    const handleRegister = () => {\n      if (!registerFormRef.value) {\n        ElMessage.error('表单引用错误');\n        return;\n      }\n      \n      registerFormRef.value.validate(valid => {\n        if (valid) {\n          state.loading = true\n          // 密码MD5加密\n          const registerData = {\n            username: state.registerForm.username,\n            password: md5(state.registerForm.password),\n            role: 'user'\n          }\n          \n          register(registerData).then(res => {\n            ElMessage.success('注册成功')\n            router.push('/login')\n          }).catch(error => {\n            ElMessage.error(error.message || '注册失败')\n          }).finally(() => {\n            state.loading = false\n          })\n        }\n      })\n    }\n    \n    return {\n      registerFormRef,\n      ...toRefs(state),\n      handleRegister\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #f5f5f5;\n}\n\n.register-box {\n  width: 350px;\n  padding: 30px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  text-align: center;\n  color: #409EFF;\n}\n\n.register-button {\n  width: 100%;\n}\n\n.options {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n}\n\n.login-link {\n  color: #409EFF;\n  text-decoration: none;\n  font-size: 14px;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAoB;;EACxBA,KAAK,EAAC;AAAc;;EAehBA,KAAK,EAAC;AAAS;;;;;;;uBAhB1BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJD,mBAAA,CAA6B;IAAxBH,KAAK,EAAC;EAAO,GAAC,MAAI,sBACvBK,YAAA,CAgBUC,kBAAA;IAhBDC,GAAG,EAAC,iBAAiB;IAAEC,KAAK,EAAEC,IAAA,CAAAC,YAAY;IAAGC,KAAK,EAAEF,IAAA,CAAAG,aAAa;IAAE,aAAW,EAAC;;IAJ9FC,OAAA,EAAAC,QAAA,CAKQ,MAEe,CAFfT,YAAA,CAEeU,uBAAA;MAFDC,IAAI,EAAC;IAAU;MALrCH,OAAA,EAAAC,QAAA,CAMU,MAA0F,CAA1FT,YAAA,CAA0FY,mBAAA;QANpGC,UAAA,EAM6BT,IAAA,CAAAC,YAAY,CAACS,QAAQ;QANlD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM6BZ,IAAA,CAAAC,YAAY,CAACS,QAAQ,GAAAE,MAAA;QAAE,aAAW,EAAC,MAAM;QAACC,WAAW,EAAC;;MANnFC,CAAA;QAQQlB,YAAA,CAEeU,uBAAA;MAFDC,IAAI,EAAC;IAAU;MARrCH,OAAA,EAAAC,QAAA,CASU,MAAuH,CAAvHT,YAAA,CAAuHY,mBAAA;QATjIC,UAAA,EAS6BT,IAAA,CAAAC,YAAY,CAACc,QAAQ;QATlD,uBAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAS6BZ,IAAA,CAAAC,YAAY,CAACc,QAAQ,GAAAH,MAAA;QAAE,aAAW,EAAC,MAAM;QAACI,IAAI,EAAC,UAAU;QAACH,WAAW,EAAC,IAAI;QAAC,eAAa,EAAb;;MATxGC,CAAA;QAWQlB,YAAA,CAEeU,uBAAA;MAFDC,IAAI,EAAC;IAAiB;MAX5CH,OAAA,EAAAC,QAAA,CAYU,MAAgI,CAAhIT,YAAA,CAAgIY,mBAAA;QAZ1IC,UAAA,EAY6BT,IAAA,CAAAC,YAAY,CAACgB,eAAe;QAZzD,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAY6BZ,IAAA,CAAAC,YAAY,CAACgB,eAAe,GAAAL,MAAA;QAAE,aAAW,EAAC,MAAM;QAACI,IAAI,EAAC,UAAU;QAACH,WAAW,EAAC,MAAM;QAAC,eAAa,EAAb;;MAZjHC,CAAA;QAcQlB,YAAA,CAEeU,uBAAA;MAhBvBF,OAAA,EAAAC,QAAA,CAeU,MAA2G,CAA3GT,YAAA,CAA2GsB,oBAAA;QAAhGF,IAAI,EAAC,SAAS;QAAEG,OAAO,EAAEnB,IAAA,CAAAmB,OAAO;QAAE5B,KAAK,EAAC,iBAAiB;QAAE6B,OAAK,EAAEC,MAAA,CAAAC;;QAfvFlB,OAAA,EAAAC,QAAA,CAeuG,MAAEM,MAAA,QAAAA,MAAA,OAfzGY,gBAAA,CAeuG,IAAE,E;QAfzGT,CAAA;;MAAAA,CAAA;QAiBQpB,mBAAA,CAEM,OAFN8B,UAEM,GADJ5B,YAAA,CAAkE6B,sBAAA;MAArDlC,KAAK,EAAC,YAAY;MAACmC,EAAE,EAAC;;MAlB7CtB,OAAA,EAAAC,QAAA,CAkBsD,MAAQM,MAAA,QAAAA,MAAA,OAlB9DY,gBAAA,CAkBsD,UAAQ,E;MAlB9DT,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}