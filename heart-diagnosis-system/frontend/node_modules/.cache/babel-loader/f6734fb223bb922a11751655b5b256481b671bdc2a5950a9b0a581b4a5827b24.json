{"ast":null,"code":"import { ref, reactive, onMounted, toRefs, onBeforeUnmount, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getStatistics } from '@/api/diagnosis';\nimport { getAllPatients } from '@/api/patient';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'Statistics',\n  setup() {\n    const algorithmChartRef = ref(null);\n    const riskChartRef = ref(null);\n    let algorithmChart = null;\n    let riskChart = null;\n    const state = reactive({\n      loading: false,\n      statistics: null,\n      patients: []\n    });\n\n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true;\n      try {\n        const res = await getStatistics();\n        state.statistics = res.data;\n\n        // 获取患者数据\n        const patientRes = await getAllPatients();\n        state.patients = patientRes.data;\n\n        // 在DOM更新后渲染图表\n        nextTick(() => {\n          setTimeout(() => {\n            renderCharts();\n          }, 300); // 使用延迟确保DOM已经渲染\n        });\n      } catch (error) {\n        console.error('获取统计数据失败', error);\n        ElMessage.error('获取统计数据失败');\n      } finally {\n        state.loading = false;\n      }\n    };\n\n    // 渲染图表\n    const renderCharts = () => {\n      if (!state.statistics) return;\n      console.log('正在渲染图表...');\n\n      // 算法分布图表\n      renderAlgorithmChart();\n\n      // 风险等级分布图表\n      renderRiskLevelChart();\n    };\n\n    // 渲染算法分布图表\n    const renderAlgorithmChart = () => {\n      if (!algorithmChartRef.value) {\n        console.error('算法图表DOM引用不存在');\n        return;\n      }\n      try {\n        // 销毁旧图表\n        if (algorithmChart) {\n          algorithmChart.dispose();\n        }\n\n        // 初始化图表\n        algorithmChart = echarts.init(algorithmChartRef.value);\n\n        // 处理数据\n        const algorithmData = state.statistics.algorithmDistribution || [];\n        console.log('算法分布数据(原始):', JSON.stringify(algorithmData));\n        let seriesData = [];\n        if (Array.isArray(algorithmData) && algorithmData.length > 0) {\n          seriesData = algorithmData.map(item => {\n            console.log('算法项目:', JSON.stringify(item));\n            // 确保我们有正确的属性名称\n            const name = item.algorithm !== undefined ? item.algorithm : item.name !== undefined ? item.name : '未知算法';\n            const value = item.count !== undefined ? item.count : item.value !== undefined ? item.value : 0;\n            return {\n              name: name || '未知算法',\n              value: value || 0\n            };\n          });\n        }\n        console.log('处理后的图表数据:', JSON.stringify(seriesData));\n\n        // 如果没有数据，添加默认数据\n        if (seriesData.length === 0) {\n          seriesData = [{\n            name: '暂无数据',\n            value: 0\n          }];\n        }\n\n        // 设置图表配置\n        const option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: seriesData.map(item => item.name)\n          },\n          series: [{\n            name: '算法分布',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: seriesData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n\n        // 应用配置\n        algorithmChart.setOption(option);\n        console.log('算法分布图表渲染完成');\n      } catch (error) {\n        console.error('渲染算法分布图表失败:', error);\n      }\n    };\n\n    // 渲染风险等级分布图表\n    const renderRiskLevelChart = () => {\n      if (!riskChartRef.value) {\n        console.error('风险图表DOM引用不存在');\n        return;\n      }\n      try {\n        // 销毁旧图表\n        if (riskChart) {\n          riskChart.dispose();\n        }\n\n        // 初始化图表\n        riskChart = echarts.init(riskChartRef.value);\n\n        // 处理数据\n        // 风险级别分类\n        const riskData = [{\n          name: '高风险',\n          value: 0\n        }, {\n          name: '中风险',\n          value: 0\n        }, {\n          name: '低风险',\n          value: 0\n        }];\n\n        // 统计风险分布\n        const diagnosisList = state.statistics.diagnosisList || [];\n        console.log('诊断列表数据:', diagnosisList);\n        if (Array.isArray(diagnosisList) && diagnosisList.length > 0) {\n          diagnosisList.forEach(item => {\n            const risk = item.result;\n            if (risk > 0.7) {\n              riskData[0].value++;\n            } else if (risk > 0.3) {\n              riskData[1].value++;\n            } else {\n              riskData[2].value++;\n            }\n          });\n        }\n\n        // 设置图表配置\n        const option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: riskData.map(item => item.name)\n          },\n          series: [{\n            name: '风险等级',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: riskData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n            itemStyle: {\n              color: function (params) {\n                const colorList = ['#F56C6C', '#E6A23C', '#67C23A'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }]\n        };\n\n        // 应用配置\n        riskChart.setOption(option);\n        console.log('风险分布图表渲染完成');\n      } catch (error) {\n        console.error('渲染风险分布图表失败:', error);\n      }\n    };\n\n    // 监听窗口大小变化\n    const handleResize = () => {\n      if (algorithmChart) {\n        algorithmChart.resize();\n      }\n      if (riskChart) {\n        riskChart.resize();\n      }\n    };\n    onMounted(() => {\n      console.log('组件已挂载，正在获取统计数据...');\n      getStatisticsData();\n      window.addEventListener('resize', handleResize);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', handleResize);\n      if (algorithmChart) {\n        algorithmChart.dispose();\n        algorithmChart = null;\n      }\n      if (riskChart) {\n        riskChart.dispose();\n        riskChart = null;\n      }\n    });\n    return {\n      algorithmChartRef,\n      riskChartRef,\n      ...toRefs(state),\n      getStatisticsData\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","toRefs","onBeforeUnmount","nextTick","ElMessage","getStatistics","getAllPatients","echarts","name","setup","algorithmChartRef","riskChartRef","algorithmChart","riskChart","state","loading","statistics","patients","getStatisticsData","res","data","patientRes","setTimeout","renderCharts","error","console","log","renderAlgorithmChart","renderRiskLevelChart","value","dispose","init","algorithmData","algorithmDistribution","JSON","stringify","seriesData","Array","isArray","length","map","item","algorithm","undefined","count","option","tooltip","trigger","formatter","legend","orient","left","series","type","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","riskData","diagnosisList","forEach","risk","result","color","params","colorList","dataIndex","handleResize","resize","window","addEventListener","removeEventListener"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Statistics.vue"],"sourcesContent":["<template>\n  <div class=\"statistics-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>数据统计</span>\n          <el-button type=\"primary\" @click=\"getStatisticsData\">刷新数据</el-button>\n        </div>\n      </template>\n      \n      <el-skeleton :loading=\"loading\" animated>\n        <template #template>\n          <div style=\"padding: 20px\">\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px\" />\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px; margin-top: 20px\" />\n          </div>\n        </template>\n        \n        <template #default>\n          <div v-if=\"statistics\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>诊断算法分布</h3>\n                  <div ref=\"algorithmChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>风险等级分布</h3>\n                  <div ref=\"riskChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n            </el-row>\n            \n            <div class=\"summary-container\">\n              <h3>诊断数据摘要</h3>\n              <div class=\"summary-content\">\n                <div class=\"summary-item\">\n                  <div class=\"item-label\">诊断总数</div>\n                  <div class=\"item-value\">{{ statistics.diagnosisCount || 0 }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"no-data\">暂无统计数据</div>\n        </template>\n      </el-skeleton>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs, onBeforeUnmount, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getStatistics } from '@/api/diagnosis'\nimport { getAllPatients } from '@/api/patient'\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Statistics',\n  setup() {\n    const algorithmChartRef = ref(null)\n    const riskChartRef = ref(null)\n    let algorithmChart = null\n    let riskChart = null\n    \n    const state = reactive({\n      loading: false,\n      statistics: null,\n      patients: []\n    })\n    \n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true\n      try {\n        const res = await getStatistics()\n        state.statistics = res.data\n        \n        // 获取患者数据\n        const patientRes = await getAllPatients()\n        state.patients = patientRes.data\n        \n        // 在DOM更新后渲染图表\n        nextTick(() => {\n          setTimeout(() => {\n            renderCharts()\n          }, 300) // 使用延迟确保DOM已经渲染\n        })\n      } catch (error) {\n        console.error('获取统计数据失败', error)\n        ElMessage.error('获取统计数据失败')\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 渲染图表\n    const renderCharts = () => {\n      if (!state.statistics) return\n      \n      console.log('正在渲染图表...')\n      \n      // 算法分布图表\n      renderAlgorithmChart()\n      \n      // 风险等级分布图表\n      renderRiskLevelChart()\n    }\n    \n    // 渲染算法分布图表\n    const renderAlgorithmChart = () => {\n      if (!algorithmChartRef.value) {\n        console.error('算法图表DOM引用不存在')\n        return\n      }\n      \n      try {\n        // 销毁旧图表\n        if (algorithmChart) {\n          algorithmChart.dispose()\n        }\n        \n        // 初始化图表\n        algorithmChart = echarts.init(algorithmChartRef.value)\n        \n        // 处理数据\n        const algorithmData = state.statistics.algorithmDistribution || []\n        console.log('算法分布数据(原始):', JSON.stringify(algorithmData))\n        \n        let seriesData = []\n        if (Array.isArray(algorithmData) && algorithmData.length > 0) {\n          seriesData = algorithmData.map(item => {\n            console.log('算法项目:', JSON.stringify(item))\n            // 确保我们有正确的属性名称\n            const name = item.algorithm !== undefined ? item.algorithm : \n                          (item.name !== undefined ? item.name : '未知算法')\n            const value = item.count !== undefined ? item.count : \n                          (item.value !== undefined ? item.value : 0)\n            \n            return {\n              name: name || '未知算法',\n              value: value || 0\n            }\n          })\n        }\n        \n        console.log('处理后的图表数据:', JSON.stringify(seriesData))\n        \n        // 如果没有数据，添加默认数据\n        if (seriesData.length === 0) {\n          seriesData = [{ name: '暂无数据', value: 0 }]\n        }\n        \n        // 设置图表配置\n        const option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: seriesData.map(item => item.name)\n          },\n          series: [\n            {\n              name: '算法分布',\n              type: 'pie',\n              radius: '55%',\n              center: ['50%', '60%'],\n              data: seriesData,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              }\n            }\n          ]\n        }\n        \n        // 应用配置\n        algorithmChart.setOption(option)\n        console.log('算法分布图表渲染完成')\n      } catch (error) {\n        console.error('渲染算法分布图表失败:', error)\n      }\n    }\n    \n    // 渲染风险等级分布图表\n    const renderRiskLevelChart = () => {\n      if (!riskChartRef.value) {\n        console.error('风险图表DOM引用不存在')\n        return\n      }\n      \n      try {\n        // 销毁旧图表\n        if (riskChart) {\n          riskChart.dispose()\n        }\n        \n        // 初始化图表\n        riskChart = echarts.init(riskChartRef.value)\n        \n        // 处理数据\n        // 风险级别分类\n        const riskData = [\n          { name: '高风险', value: 0 },\n          { name: '中风险', value: 0 },\n          { name: '低风险', value: 0 }\n        ]\n        \n        // 统计风险分布\n        const diagnosisList = state.statistics.diagnosisList || []\n        console.log('诊断列表数据:', diagnosisList)\n        \n        if (Array.isArray(diagnosisList) && diagnosisList.length > 0) {\n          diagnosisList.forEach(item => {\n            const risk = item.result\n            if (risk > 0.7) {\n              riskData[0].value++\n            } else if (risk > 0.3) {\n              riskData[1].value++\n            } else {\n              riskData[2].value++\n            }\n          })\n        }\n        \n        // 设置图表配置\n        const option = {\n          tooltip: {\n            trigger: 'item',\n            formatter: '{a} <br/>{b}: {c} ({d}%)'\n          },\n          legend: {\n            orient: 'vertical',\n            left: 'left',\n            data: riskData.map(item => item.name)\n          },\n          series: [\n            {\n              name: '风险等级',\n              type: 'pie',\n              radius: '55%',\n              center: ['50%', '60%'],\n              data: riskData,\n              emphasis: {\n                itemStyle: {\n                  shadowBlur: 10,\n                  shadowOffsetX: 0,\n                  shadowColor: 'rgba(0, 0, 0, 0.5)'\n                }\n              },\n              itemStyle: {\n                color: function(params) {\n                  const colorList = ['#F56C6C', '#E6A23C', '#67C23A']\n                  return colorList[params.dataIndex]\n                }\n              }\n            }\n          ]\n        }\n        \n        // 应用配置\n        riskChart.setOption(option)\n        console.log('风险分布图表渲染完成')\n      } catch (error) {\n        console.error('渲染风险分布图表失败:', error)\n      }\n    }\n    \n    // 监听窗口大小变化\n    const handleResize = () => {\n      if (algorithmChart) {\n        algorithmChart.resize()\n      }\n      if (riskChart) {\n        riskChart.resize()\n      }\n    }\n    \n    onMounted(() => {\n      console.log('组件已挂载，正在获取统计数据...')\n      getStatisticsData()\n      window.addEventListener('resize', handleResize)\n    })\n    \n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', handleResize)\n      if (algorithmChart) {\n        algorithmChart.dispose()\n        algorithmChart = null\n      }\n      if (riskChart) {\n        riskChart.dispose()\n        riskChart = null\n      }\n    })\n    \n    return {\n      algorithmChartRef,\n      riskChartRef,\n      ...toRefs(state),\n      getStatisticsData\n    }\n  }\n}\n</script>\n\n<style scoped>\n.statistics-container {\n  min-height: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.chart {\n  height: 300px;\n  width: 100%;\n}\n\n.summary-container {\n  margin-top: 20px;\n  border-top: 1px solid #EBEEF5;\n  padding-top: 20px;\n}\n\n.summary-content {\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 20px;\n}\n\n.summary-item {\n  width: 33.33%;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.item-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.item-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-top: 10px;\n}\n\n.no-data {\n  text-align: center;\n  color: #909399;\n  padding: 50px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}