{"ast":null,"code":"import { ref, reactive, onMounted, toRefs, onBeforeUnmount } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getStatistics } from '@/api/diagnosis';\nimport { getAllPatients } from '@/api/patient';\nimport * as echarts from 'echarts';\nexport default {\n  name: 'Statistics',\n  setup() {\n    const algorithmChartRef = ref(null);\n    const riskChartRef = ref(null);\n    let algorithmChart = null;\n    let riskChart = null;\n    const state = reactive({\n      loading: false,\n      statistics: null,\n      patients: []\n    });\n\n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true;\n      try {\n        const res = await getStatistics();\n        state.statistics = res.data;\n\n        // 获取患者数据\n        const patientRes = await getAllPatients();\n        state.patients = patientRes.data;\n\n        // 渲染图表\n        renderCharts();\n      } catch (error) {\n        ElMessage.error('获取统计数据失败');\n      } finally {\n        state.loading = false;\n      }\n    };\n\n    // 渲染图表\n    const renderCharts = () => {\n      if (!state.statistics) return;\n\n      // 算法分布图表\n      renderAlgorithmChart();\n\n      // 风险等级分布图表\n      renderRiskLevelChart();\n    };\n\n    // 渲染算法分布图表\n    const renderAlgorithmChart = () => {\n      if (!algorithmChartRef.value) return;\n      if (!algorithmChart) {\n        algorithmChart = echarts.init(algorithmChartRef.value);\n      }\n      const algorithmData = state.statistics.algorithmDistribution || [];\n      const seriesData = algorithmData.map(item => ({\n        name: item.algorithm,\n        value: item.count\n      }));\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: seriesData.map(item => item.name)\n        },\n        series: [{\n          name: '算法分布',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: seriesData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      algorithmChart.setOption(option);\n    };\n\n    // 渲染风险等级分布图表\n    const renderRiskLevelChart = () => {\n      if (!riskChartRef.value) return;\n      if (!riskChart) {\n        riskChart = echarts.init(riskChartRef.value);\n      }\n\n      // 模拟数据\n      const riskData = [{\n        name: '高风险',\n        value: 0\n      }, {\n        name: '中风险',\n        value: 0\n      }, {\n        name: '低风险',\n        value: 0\n      }];\n\n      // 统计风险分布\n      if (state.statistics.diagnosisList) {\n        state.statistics.diagnosisList.forEach(item => {\n          const risk = item.result;\n          if (risk > 0.7) {\n            riskData[0].value++;\n          } else if (risk > 0.3) {\n            riskData[1].value++;\n          } else {\n            riskData[2].value++;\n          }\n        });\n      }\n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: riskData.map(item => item.name)\n        },\n        series: [{\n          name: '风险等级',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '60%'],\n          data: riskData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          itemStyle: {\n            color: function (params) {\n              const colorList = ['#F56C6C', '#E6A23C', '#67C23A'];\n              return colorList[params.dataIndex];\n            }\n          }\n        }]\n      };\n      riskChart.setOption(option);\n    };\n\n    // 监听窗口大小变化\n    const handleResize = () => {\n      if (algorithmChart) {\n        algorithmChart.resize();\n      }\n      if (riskChart) {\n        riskChart.resize();\n      }\n    };\n    onMounted(() => {\n      getStatisticsData();\n      window.addEventListener('resize', handleResize);\n    });\n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', handleResize);\n      if (algorithmChart) {\n        algorithmChart.dispose();\n        algorithmChart = null;\n      }\n      if (riskChart) {\n        riskChart.dispose();\n        riskChart = null;\n      }\n    });\n    return {\n      algorithmChartRef,\n      riskChartRef,\n      ...toRefs(state),\n      getStatisticsData\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","toRefs","onBeforeUnmount","ElMessage","getStatistics","getAllPatients","echarts","name","setup","algorithmChartRef","riskChartRef","algorithmChart","riskChart","state","loading","statistics","patients","getStatisticsData","res","data","patientRes","renderCharts","error","renderAlgorithmChart","renderRiskLevelChart","value","init","algorithmData","algorithmDistribution","seriesData","map","item","algorithm","count","option","tooltip","trigger","formatter","legend","orient","left","series","type","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","riskData","diagnosisList","forEach","risk","result","color","params","colorList","dataIndex","handleResize","resize","window","addEventListener","removeEventListener","dispose"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Statistics.vue"],"sourcesContent":["<template>\n  <div class=\"statistics-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>数据统计</span>\n          <el-button type=\"primary\" @click=\"getStatisticsData\">刷新数据</el-button>\n        </div>\n      </template>\n      \n      <el-skeleton :loading=\"loading\" animated>\n        <template #template>\n          <div style=\"padding: 20px\">\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px\" />\n            <el-skeleton-item variant=\"p\" style=\"width: 100%; height: 300px; margin-top: 20px\" />\n          </div>\n        </template>\n        \n        <template #default>\n          <div v-if=\"statistics\">\n            <el-row :gutter=\"20\">\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>诊断算法分布</h3>\n                  <div ref=\"algorithmChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n              <el-col :span=\"12\">\n                <div class=\"chart-container\">\n                  <h3>风险等级分布</h3>\n                  <div ref=\"riskChartRef\" class=\"chart\"></div>\n                </div>\n              </el-col>\n            </el-row>\n            \n            <div class=\"summary-container\">\n              <h3>诊断数据摘要</h3>\n              <div class=\"summary-content\">\n                <div class=\"summary-item\">\n                  <div class=\"item-label\">诊断总数</div>\n                  <div class=\"item-value\">{{ statistics.diagnosisCount || 0 }}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-else class=\"no-data\">暂无统计数据</div>\n        </template>\n      </el-skeleton>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs, onBeforeUnmount } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { getStatistics } from '@/api/diagnosis'\nimport { getAllPatients } from '@/api/patient'\nimport * as echarts from 'echarts'\n\nexport default {\n  name: 'Statistics',\n  setup() {\n    const algorithmChartRef = ref(null)\n    const riskChartRef = ref(null)\n    let algorithmChart = null\n    let riskChart = null\n    \n    const state = reactive({\n      loading: false,\n      statistics: null,\n      patients: []\n    })\n    \n    // 获取统计数据\n    const getStatisticsData = async () => {\n      state.loading = true\n      try {\n        const res = await getStatistics()\n        state.statistics = res.data\n        \n        // 获取患者数据\n        const patientRes = await getAllPatients()\n        state.patients = patientRes.data\n        \n        // 渲染图表\n        renderCharts()\n      } catch (error) {\n        ElMessage.error('获取统计数据失败')\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 渲染图表\n    const renderCharts = () => {\n      if (!state.statistics) return\n      \n      // 算法分布图表\n      renderAlgorithmChart()\n      \n      // 风险等级分布图表\n      renderRiskLevelChart()\n    }\n    \n    // 渲染算法分布图表\n    const renderAlgorithmChart = () => {\n      if (!algorithmChartRef.value) return\n      \n      if (!algorithmChart) {\n        algorithmChart = echarts.init(algorithmChartRef.value)\n      }\n      \n      const algorithmData = state.statistics.algorithmDistribution || []\n      const seriesData = algorithmData.map(item => ({\n        name: item.algorithm,\n        value: item.count\n      }))\n      \n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: seriesData.map(item => item.name)\n        },\n        series: [\n          {\n            name: '算法分布',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: seriesData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }\n        ]\n      }\n      \n      algorithmChart.setOption(option)\n    }\n    \n    // 渲染风险等级分布图表\n    const renderRiskLevelChart = () => {\n      if (!riskChartRef.value) return\n      \n      if (!riskChart) {\n        riskChart = echarts.init(riskChartRef.value)\n      }\n      \n      // 模拟数据\n      const riskData = [\n        { name: '高风险', value: 0 },\n        { name: '中风险', value: 0 },\n        { name: '低风险', value: 0 }\n      ]\n      \n      // 统计风险分布\n      if (state.statistics.diagnosisList) {\n        state.statistics.diagnosisList.forEach(item => {\n          const risk = item.result\n          if (risk > 0.7) {\n            riskData[0].value++\n          } else if (risk > 0.3) {\n            riskData[1].value++\n          } else {\n            riskData[2].value++\n          }\n        })\n      }\n      \n      const option = {\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left',\n          data: riskData.map(item => item.name)\n        },\n        series: [\n          {\n            name: '风险等级',\n            type: 'pie',\n            radius: '55%',\n            center: ['50%', '60%'],\n            data: riskData,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            },\n            itemStyle: {\n              color: function(params) {\n                const colorList = ['#F56C6C', '#E6A23C', '#67C23A']\n                return colorList[params.dataIndex]\n              }\n            }\n          }\n        ]\n      }\n      \n      riskChart.setOption(option)\n    }\n    \n    // 监听窗口大小变化\n    const handleResize = () => {\n      if (algorithmChart) {\n        algorithmChart.resize()\n      }\n      if (riskChart) {\n        riskChart.resize()\n      }\n    }\n    \n    onMounted(() => {\n      getStatisticsData()\n      window.addEventListener('resize', handleResize)\n    })\n    \n    onBeforeUnmount(() => {\n      window.removeEventListener('resize', handleResize)\n      if (algorithmChart) {\n        algorithmChart.dispose()\n        algorithmChart = null\n      }\n      if (riskChart) {\n        riskChart.dispose()\n        riskChart = null\n      }\n    })\n    \n    return {\n      algorithmChartRef,\n      riskChartRef,\n      ...toRefs(state),\n      getStatisticsData\n    }\n  }\n}\n</script>\n\n<style scoped>\n.statistics-container {\n  min-height: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.chart-container {\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.chart {\n  height: 300px;\n}\n\n.summary-container {\n  margin-top: 20px;\n  border-top: 1px solid #EBEEF5;\n  padding-top: 20px;\n}\n\n.summary-content {\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 20px;\n}\n\n.summary-item {\n  width: 33.33%;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.item-label {\n  font-size: 14px;\n  color: #606266;\n}\n\n.item-value {\n  font-size: 24px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-top: 10px;\n}\n\n.no-data {\n  text-align: center;\n  color: #909399;\n  padding: 50px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}