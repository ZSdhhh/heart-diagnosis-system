{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: null,\n    token: localStorage.getItem('token') || '',\n    patients: [],\n    activePatient: null,\n    algorithms: [{\n      id: 1,\n      name: '模拟诊断算法',\n      description: '模拟诊断算法',\n      status: 1\n    }]\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    currentUser: state => state.user\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    clearAuth(state) {\n      state.token = '';\n      state.user = null;\n      localStorage.removeItem('token');\n    },\n    setPatients(state, patients) {\n      state.patients = patients;\n    },\n    setActivePatient(state, patient) {\n      state.activePatient = patient;\n    },\n    addPatient(state, patient) {\n      state.patients.push(patient);\n    },\n    updatePatient(state, updatedPatient) {\n      const index = state.patients.findIndex(p => p.id === updatedPatient.id);\n      if (index !== -1) {\n        state.patients.splice(index, 1, updatedPatient);\n      }\n    },\n    deletePatient(state, id) {\n      state.patients = state.patients.filter(p => p.id !== id);\n    }\n  },\n  actions: {\n    login({\n      commit\n    }, user) {\n      commit('setUser', user);\n      commit('setToken', user.id.toString());\n    },\n    logout({\n      commit\n    }) {\n      commit('clearAuth');\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","user","token","localStorage","getItem","patients","activePatient","algorithms","id","name","description","status","getters","isLoggedIn","currentUser","mutations","setToken","setItem","setUser","clearAuth","removeItem","setPatients","setActivePatient","patient","addPatient","push","updatePatient","updatedPatient","index","findIndex","p","splice","deletePatient","filter","actions","login","commit","toString","logout","modules"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    user: null,\n    token: localStorage.getItem('token') || '',\n    patients: [],\n    activePatient: null,\n    algorithms: [\n      { id: 1, name: '模拟诊断算法', description: '模拟诊断算法', status: 1 }\n    ]\n  },\n  getters: {\n    isLoggedIn: state => !!state.token,\n    currentUser: state => state.user\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token\n      localStorage.setItem('token', token)\n    },\n    setUser(state, user) {\n      state.user = user\n    },\n    clearAuth(state) {\n      state.token = ''\n      state.user = null\n      localStorage.removeItem('token')\n    },\n    setPatients(state, patients) {\n      state.patients = patients\n    },\n    setActivePatient(state, patient) {\n      state.activePatient = patient\n    },\n    addPatient(state, patient) {\n      state.patients.push(patient)\n    },\n    updatePatient(state, updatedPatient) {\n      const index = state.patients.findIndex(p => p.id === updatedPatient.id)\n      if (index !== -1) {\n        state.patients.splice(index, 1, updatedPatient)\n      }\n    },\n    deletePatient(state, id) {\n      state.patients = state.patients.filter(p => p.id !== id)\n    }\n  },\n  actions: {\n    login({ commit }, user) {\n      commit('setUser', user)\n      commit('setToken', user.id.toString())\n    },\n    logout({ commit }) {\n      commit('clearAuth')\n    }\n  },\n  modules: {\n  }\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;IAC1CC,QAAQ,EAAE,EAAE;IACZC,aAAa,EAAE,IAAI;IACnBC,UAAU,EAAE,CACV;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,WAAW,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAE,CAAC;EAE/D,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,EAAEb,KAAK,IAAI,CAAC,CAACA,KAAK,CAACE,KAAK;IAClCY,WAAW,EAAEd,KAAK,IAAIA,KAAK,CAACC;EAC9B,CAAC;EACDc,SAAS,EAAE;IACTC,QAAQA,CAAChB,KAAK,EAAEE,KAAK,EAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEf,KAAK,CAAC;IACtC,CAAC;IACDgB,OAAOA,CAAClB,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDkB,SAASA,CAACnB,KAAK,EAAE;MACfA,KAAK,CAACE,KAAK,GAAG,EAAE;MAChBF,KAAK,CAACC,IAAI,GAAG,IAAI;MACjBE,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IACDC,WAAWA,CAACrB,KAAK,EAAEK,QAAQ,EAAE;MAC3BL,KAAK,CAACK,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDiB,gBAAgBA,CAACtB,KAAK,EAAEuB,OAAO,EAAE;MAC/BvB,KAAK,CAACM,aAAa,GAAGiB,OAAO;IAC/B,CAAC;IACDC,UAAUA,CAACxB,KAAK,EAAEuB,OAAO,EAAE;MACzBvB,KAAK,CAACK,QAAQ,CAACoB,IAAI,CAACF,OAAO,CAAC;IAC9B,CAAC;IACDG,aAAaA,CAAC1B,KAAK,EAAE2B,cAAc,EAAE;MACnC,MAAMC,KAAK,GAAG5B,KAAK,CAACK,QAAQ,CAACwB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACtB,EAAE,KAAKmB,cAAc,CAACnB,EAAE,CAAC;MACvE,IAAIoB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChB5B,KAAK,CAACK,QAAQ,CAAC0B,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,cAAc,CAAC;MACjD;IACF,CAAC;IACDK,aAAaA,CAAChC,KAAK,EAAEQ,EAAE,EAAE;MACvBR,KAAK,CAACK,QAAQ,GAAGL,KAAK,CAACK,QAAQ,CAAC4B,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACtB,EAAE,KAAKA,EAAE,CAAC;IAC1D;EACF,CAAC;EACD0B,OAAO,EAAE;IACPC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEnC,IAAI,EAAE;MACtBmC,MAAM,CAAC,SAAS,EAAEnC,IAAI,CAAC;MACvBmC,MAAM,CAAC,UAAU,EAAEnC,IAAI,CAACO,EAAE,CAAC6B,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC;IACDC,MAAMA,CAAC;MAAEF;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,WAAW,CAAC;IACrB;EACF,CAAC;EACDG,OAAO,EAAE,CACT;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}