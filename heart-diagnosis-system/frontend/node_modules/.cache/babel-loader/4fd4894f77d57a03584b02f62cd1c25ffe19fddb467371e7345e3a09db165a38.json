{"ast":null,"code":"import { ref, reactive, onMounted, toRefs } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getPatientsByPage, addPatient, updatePatient, deletePatient } from '@/api/patient';\nexport default {\n  name: 'Patients',\n  setup() {\n    const patientFormRef = ref(null);\n    const state = reactive({\n      patients: [],\n      loading: false,\n      dialogVisible: false,\n      dialogType: 'add',\n      // add-添加 edit-编辑\n      patientForm: {\n        id: null,\n        name: '',\n        age: null,\n        gender: 1,\n        bloodPressure: '',\n        cholesterol: null\n      },\n      pagination: {\n        pageNum: 1,\n        pageSize: 10,\n        total: 0\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        age: [{\n          required: true,\n          message: '请输入年龄',\n          trigger: 'blur'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }]\n      }\n    });\n\n    // 获取患者列表（分页）\n    const getPatients = async () => {\n      state.loading = true;\n      try {\n        const res = await getPatientsByPage(state.pagination.pageNum, state.pagination.pageSize);\n        if (res.code === 200 && res.data) {\n          state.patients = res.data.records;\n          state.pagination.total = res.data.total;\n          state.pagination.pageNum = res.data.pageNum;\n          state.pagination.pageSize = res.data.pageSize;\n        } else {\n          ElMessage.error(res.message || '获取患者列表失败');\n        }\n      } catch (error) {\n        ElMessage.error('获取患者列表失败');\n      } finally {\n        state.loading = false;\n      }\n    };\n\n    // 每页条数变化\n    const handleSizeChange = val => {\n      state.pagination.pageSize = val;\n      getPatients();\n    };\n\n    // 页码变化\n    const handleCurrentChange = val => {\n      state.pagination.pageNum = val;\n      getPatients();\n    };\n\n    // 添加患者\n    const handleAdd = () => {\n      state.dialogType = 'add';\n      state.patientForm = {\n        id: null,\n        name: '',\n        age: null,\n        gender: 1,\n        bloodPressure: '',\n        cholesterol: null\n      };\n      state.dialogVisible = true;\n    };\n\n    // 编辑患者\n    const handleEdit = row => {\n      state.dialogType = 'edit';\n      state.patientForm = {\n        ...row\n      };\n      state.dialogVisible = true;\n    };\n\n    // 删除患者\n    const handleDelete = row => {\n      ElMessageBox.confirm(`确定要删除患者 ${row.name} 吗?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await deletePatient(row.id);\n          ElMessage.success('删除成功');\n          getPatients();\n        } catch (error) {\n          ElMessage.error('删除失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      patientFormRef.value.validate(async valid => {\n        if (valid) {\n          try {\n            if (state.dialogType === 'add') {\n              await addPatient(state.patientForm);\n              ElMessage.success('添加成功');\n            } else {\n              await updatePatient(state.patientForm.id, state.patientForm);\n              ElMessage.success('更新成功');\n            }\n            state.dialogVisible = false;\n            getPatients();\n          } catch (error) {\n            ElMessage.error(state.dialogType === 'add' ? '添加失败' : '更新失败');\n          }\n        }\n      });\n    };\n    onMounted(() => {\n      getPatients();\n    });\n    return {\n      patientFormRef,\n      ...toRefs(state),\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      submitForm,\n      handleSizeChange,\n      handleCurrentChange\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","toRefs","ElMessage","ElMessageBox","getPatientsByPage","addPatient","updatePatient","deletePatient","name","setup","patientFormRef","state","patients","loading","dialogVisible","dialogType","patientForm","id","age","gender","bloodPressure","cholesterol","pagination","pageNum","pageSize","total","rules","required","message","trigger","getPatients","res","code","data","records","error","handleSizeChange","val","handleCurrentChange","handleAdd","handleEdit","row","handleDelete","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","submitForm","value","validate","valid"],"sources":["/Users/liuxingliang/Desktop/wendang/20240415/heart-diagnosis-system/frontend/src/views/Patients.vue"],"sourcesContent":["<template>\n  <div class=\"patients-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>患者管理</span>\n          <el-button type=\"primary\" @click=\"handleAdd\">添加患者</el-button>\n        </div>\n      </template>\n      \n      <el-table :data=\"patients\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"age\" label=\"年龄\" width=\"80\"></el-table-column>\n        <el-table-column label=\"性别\" width=\"80\">\n          <template #default=\"scope\">\n            {{ scope.row.gender === 1 ? '男' : '女' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"bloodPressure\" label=\"血压\"></el-table-column>\n        <el-table-column prop=\"cholesterol\" label=\"胆固醇\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"180\">\n          <template #default=\"scope\">\n            <el-button size=\"small\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <!-- 分页组件 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"pagination.pageNum\"\n          v-model:page-size=\"pagination.pageSize\"\n          :page-sizes=\"[5, 10, 20, 50]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"pagination.total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 患者信息编辑对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"dialogType === 'add' ? '添加患者' : '编辑患者'\"\n      width=\"500px\"\n    >\n      <el-form :model=\"patientForm\" label-width=\"80px\" ref=\"patientFormRef\" :rules=\"rules\">\n        <el-form-item label=\"姓名\" prop=\"name\">\n          <el-input v-model=\"patientForm.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"年龄\" prop=\"age\">\n          <el-input v-model.number=\"patientForm.age\" type=\"number\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-radio-group v-model=\"patientForm.gender\">\n            <el-radio :label=\"1\">男</el-radio>\n            <el-radio :label=\"0\">女</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"血压\" prop=\"bloodPressure\">\n          <el-input v-model=\"patientForm.bloodPressure\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"胆固醇\" prop=\"cholesterol\">\n          <el-input v-model.number=\"patientForm.cholesterol\" type=\"number\"></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, toRefs } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getPatientsByPage, addPatient, updatePatient, deletePatient } from '@/api/patient'\n\nexport default {\n  name: 'Patients',\n  setup() {\n    const patientFormRef = ref(null)\n    \n    const state = reactive({\n      patients: [],\n      loading: false,\n      dialogVisible: false,\n      dialogType: 'add', // add-添加 edit-编辑\n      patientForm: {\n        id: null,\n        name: '',\n        age: null,\n        gender: 1,\n        bloodPressure: '',\n        cholesterol: null\n      },\n      pagination: {\n        pageNum: 1,\n        pageSize: 10,\n        total: 0\n      },\n      rules: {\n        name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\n        age: [{ required: true, message: '请输入年龄', trigger: 'blur' }],\n        gender: [{ required: true, message: '请选择性别', trigger: 'change' }]\n      }\n    })\n    \n    // 获取患者列表（分页）\n    const getPatients = async () => {\n      state.loading = true\n      try {\n        const res = await getPatientsByPage(state.pagination.pageNum, state.pagination.pageSize)\n        if (res.code === 200 && res.data) {\n          state.patients = res.data.records\n          state.pagination.total = res.data.total\n          state.pagination.pageNum = res.data.pageNum\n          state.pagination.pageSize = res.data.pageSize\n        } else {\n          ElMessage.error(res.message || '获取患者列表失败')\n        }\n      } catch (error) {\n        ElMessage.error('获取患者列表失败')\n      } finally {\n        state.loading = false\n      }\n    }\n    \n    // 每页条数变化\n    const handleSizeChange = (val) => {\n      state.pagination.pageSize = val\n      getPatients()\n    }\n    \n    // 页码变化\n    const handleCurrentChange = (val) => {\n      state.pagination.pageNum = val\n      getPatients()\n    }\n    \n    // 添加患者\n    const handleAdd = () => {\n      state.dialogType = 'add'\n      state.patientForm = {\n        id: null,\n        name: '',\n        age: null,\n        gender: 1,\n        bloodPressure: '',\n        cholesterol: null\n      }\n      state.dialogVisible = true\n    }\n    \n    // 编辑患者\n    const handleEdit = (row) => {\n      state.dialogType = 'edit'\n      state.patientForm = { ...row }\n      state.dialogVisible = true\n    }\n    \n    // 删除患者\n    const handleDelete = (row) => {\n      ElMessageBox.confirm(\n        `确定要删除患者 ${row.name} 吗?`,\n        '提示',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning',\n        }\n      ).then(async () => {\n        try {\n          await deletePatient(row.id)\n          ElMessage.success('删除成功')\n          getPatients()\n        } catch (error) {\n          ElMessage.error('删除失败')\n        }\n      }).catch(() => {})\n    }\n    \n    // 提交表单\n    const submitForm = () => {\n      patientFormRef.value.validate(async (valid) => {\n        if (valid) {\n          try {\n            if (state.dialogType === 'add') {\n              await addPatient(state.patientForm)\n              ElMessage.success('添加成功')\n            } else {\n              await updatePatient(state.patientForm.id, state.patientForm)\n              ElMessage.success('更新成功')\n            }\n            state.dialogVisible = false\n            getPatients()\n          } catch (error) {\n            ElMessage.error(state.dialogType === 'add' ? '添加失败' : '更新失败')\n          }\n        }\n      })\n    }\n    \n    onMounted(() => {\n      getPatients()\n    })\n    \n    return {\n      patientFormRef,\n      ...toRefs(state),\n      handleAdd,\n      handleEdit,\n      handleDelete,\n      submitForm,\n      handleSizeChange,\n      handleCurrentChange\n    }\n  }\n}\n</script>\n\n<style scoped>\n.patients-container {\n  min-height: 100%;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}